# This workflow will install Python dependencies, and run tests.

name: Task Queue CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  validate:
    uses: ./.github/workflows/validate_code.yml

  version_check:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'main'
    - name: Main Version
      run: echo "MAIN_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Merge Version
      run: echo "MERGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Version Comparison
      run: python .github/workflows/verify_version.py ${MAIN_VERSION} ${MERGE_VERSION}

  publish-image-check:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Main Version
        run: echo "MAIN_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
      - name: New Release Version Check
        run: python .github/workflows/verify_new_image.py ${MAIN_VERSION}
      # - name: Result
      #   run: echo "$PUBLISH_DOCKER_IMAGE"
      # - name: Condition
      #   run: echo ${{ (github.ref != 'refs/heads/main') }}
      # - name: Condition 2
      #   env:
      #      CREATE_DOCKER_IMAGE: ${{ env.PUBLISH_DOCKER_IMAGE == env.PUBLISH_DOCKER_IMAGE_VALID }}
      #   run: echo "$CREATE_DOCKER_IMAGE" >> $GITHUB_ENV
      # - name: Successful Version Check
      #   if: success()
      #   run: echo "Publishing docker image"
      #   env:
      #      PUBLISH_DOCKER_IMAGE: ${{true}}
      # - name: Failed Version Check
      #   if: failure()
      #   run: echo "Not publishing docker image"
      #   env:
      #      PUBLISH_DOCKER_IMAGE: ${{false}}

  publish-docker-image:
    needs: [publish-image-check]
    env:
       CREATE_DOCKER_IMAGE: ${{ env.PUBLISH_DOCKER_IMAGE == env.PUBLISH_DOCKER_IMAGE_VALID }}
    if: ${{ (github.ref != 'refs/heads/main') && ("$CREATE_DOCKER_IMAGE") }}
    permissions:
      packages: write
    uses: ./.github/workflows/publish_docker_image.yml

  create-git-tag:
    needs: [validate]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create and push tag
        run: |
          version=$(python setup.py --version)
          echo "Task Queue Version = ${version}"
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${version}
          git push origin ${version}
